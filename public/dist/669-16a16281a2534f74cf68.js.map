{"version":3,"file":"669-16a16281a2534f74cf68.js","mappings":"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","sources":["webpack://peachpay-for-woocommerce/./frontend/express-checkout/ts/payment/poynt/button.ts","webpack://peachpay-for-woocommerce/./frontend/native-checkout/ts/poynt/class-poynt-card-payment.ts","webpack://peachpay-for-woocommerce/./frontend/express-checkout/ts/payment/poynt/poynt.ts","webpack://peachpay-for-woocommerce/./frontend/express-checkout/ts/payment/poynt/card.ts"],"sourcesContent":["import {$qsAll} from '../../../../@shared/ts/dom';\nimport {type ModalPage, type LoadingMode} from '../../models/IEnvironment';\nimport {DefaultCart} from '../../reducers/cartReducer';\nimport {Environment} from '../../reducers/environmentReducer';\nimport {PaymentConfiguration} from '../../reducers/paymentConfigurationReducer';\nimport {store} from '../../store';\nimport {formatCurrencyString} from '../../util/currency';\nimport {getLocaleText} from '../../util/translation';\n\nfunction setupPoyntButton() {\n\tstore.subscribe(() => {\n\t\trenderPoyntButtonDisplay(\n\t\t\tPaymentConfiguration.selectedGateway(),\n\t\t\tEnvironment.modalUI.page(),\n\t\t\tEnvironment.modalUI.loadingMode(),\n\t\t);\n\n\t\trenderPoyntButtonLoading(\n\t\t\tEnvironment.modalUI.loadingMode(),\n\t\t);\n\t});\n}\n\nfunction renderPoyntButtonDisplay(gatewayId: string, page: ModalPage, loadingMode: LoadingMode) {\n\t// Show/hide poynt button container\n\tif (gatewayId.startsWith('peachpay_poynt_') && page === 'payment') {\n\t\t$qsAll('.poynt-btn-container', $element => {\n\t\t\t$element.classList.remove('hide');\n\t\t});\n\t} else {\n\t\t$qsAll('.poynt-btn-container', $element => {\n\t\t\t$element.classList.add('hide');\n\t\t});\n\t}\n\n\t// Hide/Show button\n\tif (loadingMode === 'loading') {\n\t\t$qsAll('.poynt-btn', $element => {\n\t\t\t$element.classList.add('hide');\n\t\t});\n\t} else {\n\t\t$qsAll('.poynt-btn', $element => {\n\t\t\t$element.classList.remove('hide');\n\t\t});\n\t}\n}\n\nfunction renderPoyntButtonLoading(mode: LoadingMode) {\n\t// Show/hide the external spinner\n\tif (mode === 'loading') {\n\t\t$qsAll('.poynt-spinner-container', $element => {\n\t\t\t$element.classList.remove('hide');\n\t\t});\n\t} else {\n\t\t$qsAll('.poynt-spinner-container', $element => {\n\t\t\t$element.classList.add('hide');\n\t\t});\n\t}\n\n\t// Show/hide the internal spinner\n\tif (mode === 'processing') {\n\t\t$qsAll('.poynt-btn-spinner', $element => {\n\t\t\t$element.classList.remove('hide');\n\t\t});\n\t} else {\n\t\t$qsAll('.poynt-btn-spinner', $element => {\n\t\t\t$element.classList.add('hide');\n\t\t});\n\t}\n\n\t// Show/hide processing message\n\tif (mode === 'processing') {\n\t\t$qsAll('.poynt-btn > .button-text', $element => {\n\t\t\t$element.innerHTML = getLocaleText('Processing');\n\t\t});\n\t} else {\n\t\t$qsAll('.poynt-btn > .button-text', $element => {\n\t\t\t$element.innerHTML = `${getLocaleText('Pay')} ${formatCurrencyString(DefaultCart.total())}`;\n\t\t});\n\t}\n\n\t// Enable/disable the poynt button\n\tif (mode === 'finished') {\n\t\t$qsAll<HTMLInputElement>('.poynt-btn', $element => {\n\t\t\t$element.disabled = false;\n\t\t});\n\t} else {\n\t\t$qsAll<HTMLInputElement>('.poynt-btn', $element => {\n\t\t\t$element.disabled = true;\n\t\t});\n\t}\n}\n\nexport {setupPoyntButton};\n","import {type NoncePayload, type Collect, type CollectOptions, type PoyntOptions} from './types';\n\ndeclare const TokenizeJs: TokenizeJs;\n\ntype Token = {nonce?: string; error?: string};\n\nclass PoyntCardElement {\n\tprivate readonly businessId: string;\n\tprivate readonly applicationId: string;\n\n\tprivate readonly $cardElement: Collect;\n\n\tconstructor(options: PoyntOptions) {\n\t\tthis.businessId = options.businessId;\n\t\tthis.applicationId = options.applicationId;\n\n\t\tthis.$cardElement = new TokenizeJs(this.businessId, this.applicationId);\n\t}\n\n\tpublic mount(selector: string, options: CollectOptions) {\n\t\tthis.$cardElement.mount(selector, document, options);\n\t}\n\n\tpublic async tokenize(payload: NoncePayload): Promise<Token> {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.$cardElement.on('nonce', payload => {\n\t\t\t\tif (payload.data.nonce) {\n\t\t\t\t\tresolve({nonce: payload.data.nonce});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$cardElement.on('error', error => {\n\t\t\t\tresolve({error: error.data?.message ?? error.data?.error?.message ?? 'Something went wrong. Please try again.'});\n\t\t\t});\n\n\t\t\tthis.$cardElement.getNonce(payload);\n\t\t});\n\t}\n}\n\nexport {\n\ttype Token,\n\tPoyntCardElement,\n};\n","import {$qsAll, loadScript} from '../../../../@shared/ts/dom';\nimport {FeatureFlag} from '../../../../@type/features';\nimport {type NoncePayload, type PoyntOptions} from '../../../../native-checkout/ts/poynt/types';\nimport {type Token} from '../../../../native-checkout/ts/poynt/class-poynt-card-payment';\nimport {checkRequiredFields} from '../../features/additionalFields';\nimport {type GatewayConfiguration} from '../../models/GatewayConfiguration';\nimport {Feature, startModalProcessing, stopModalLoading} from '../../reducers/environmentReducer';\nimport {PaymentConfiguration, registerGatewayBatch} from '../../reducers/paymentConfigurationReducer';\nimport {PeachPayCustomer} from '../../reducers/peachPayCustomerReducer';\nimport {store} from '../../store';\nimport {displayPaymentErrorMessage, type OrderService} from '../order';\nimport {clearLocalSession} from '../session';\nimport {setupPoyntButton} from './button';\nimport {initPoyntCardMethod} from './card';\nimport {getErrorString} from '../../../../@shared/ts/error';\nimport {getLocaleText} from '../../util/translation';\n\n/**\n * Implementation type for a GoDaddy Poynt gateway\n */\nexport interface PoyntGateway {\n\tconfig: GatewayConfiguration;\n\tinit?: (options: PoyntOptions) => void;\n\ttokenize: (payload: NoncePayload) => Promise<Token>;\n}\n\nexport default async function initPoyntPaymentIntegration(orderService: OrderService) {\n\tif (!Feature.enabled(FeatureFlag.POYNT_GATEWAYS)) {\n\t\treturn;\n\t}\n\n\tconst poyntSrc = Feature.metadata<string>(FeatureFlag.POYNT_GATEWAYS, 'poynt_src');\n\tconst businessId = Feature.metadata<string>(FeatureFlag.POYNT_GATEWAYS, 'business_id');\n\tconst applicationId = Feature.metadata<string>(FeatureFlag.POYNT_GATEWAYS, 'application_id');\n\n\tif (!businessId || !applicationId || !poyntSrc) {\n\t\treturn;\n\t}\n\n\tconst poyntOptions = {businessId, applicationId};\n\n\tawait loadScript(poyntSrc, null, () => {\n\t\tconst gateways = registerPoyntGateways();\n\t\tactivatePoyntGateways(gateways, orderService, poyntOptions);\n\t\tsetupPoyntButton();\n\t});\n}\n\nfunction registerPoyntGateways(): Record<string, PoyntGateway> {\n\tconst gatewayImplementations: Record<string, PoyntGateway> = {};\n\tconst gatewayConfigurations: Record<string, GatewayConfiguration> = {};\n\n\tif (Feature.enabled(FeatureFlag.POYNT_CARD_GATEWAY)) {\n\t\tconst method = initPoyntCardMethod();\n\t\tgatewayConfigurations[method.config.gatewayId] = method.config;\n\t\tgatewayImplementations[method.config.gatewayId] = method;\n\t}\n\n\tstore.dispatch(registerGatewayBatch(gatewayConfigurations));\n\n\treturn gatewayImplementations;\n}\n\nfunction activatePoyntGateways(gateways: Record<string, PoyntGateway>, orderService: OrderService, options: PoyntOptions) {\n\tfor (const [_, gateway] of Object.entries(gateways)) {\n\t\tif (gateway.init) {\n\t\t\tgateway.init(options);\n\t\t}\n\t}\n\n\tconst confirm = (event: MouseEvent) => {\n\t\tconst requiredFieldsVerification = checkRequiredFields();\n\t\tif (!requiredFieldsVerification) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst $target = event.target as HTMLElement | null;\n\t\tconst $button = $target?.closest<HTMLButtonElement>('button');\n\t\tif (!$button) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst gatewayId = PaymentConfiguration.selectedGateway();\n\t\tconst gateway = gateways[gatewayId];\n\t\tif (!gateway) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn poyntPaymentFlow(gateway, orderService);\n\t};\n\n\t$qsAll<HTMLElement>('.poynt-btn', $el => {\n\t\t$el.addEventListener('click', event => confirm(event));\n\t});\n}\n\nasync function poyntPaymentFlow(payment: PoyntGateway, orderService: OrderService) {\n\t$qsAll('.pp-pm-error-text', $el => {\n\t\t$el.remove();\n\t});\n\n\tstore.dispatch(startModalProcessing());\n\n\tconst payload = getNoncePayload();\n\n\tconst {nonce, error} = await payment.tokenize(payload);\n\n\tconst {error: transactionError, result: transaction} = await orderService.startTransaction(payment.config.gatewayId);\n\tif (transactionError || !transaction) {\n\t\tconst errorMessage = transactionError ? getErrorString(transactionError) : getLocaleText('An unknown error occured while starting the transaction. Please refresh the page and try again.');\n\t\tdisplayPaymentErrorMessage(errorMessage);\n\n\t\tstore.dispatch(stopModalLoading());\n\t\treturn;\n\t}\n\n\tif (error ?? !nonce) {\n\t\tawait transaction.complete({\n\t\t\tpaymentStatus: 'creationfailed',\n\t\t\torderStatus: 'unperformed',\n\t\t\tnote: error ?? 'An unknown error occured while retrieving the nonce.',\n\t\t});\n\n\t\tdisplayPaymentErrorMessage(error ?? 'An unknown error occured while tokenizing the payment method.');\n\t\tstore.dispatch(stopModalLoading());\n\t\treturn;\n\t}\n\n\tconst {error: orderError, result: orderResult} = await orderService.placeOrder(transaction, {\n\t\tpeachpay_poynt_nonce: nonce,\n\t});\n\n\tif (orderError || !orderResult || orderResult.result !== 'success') {\n\t\tstore.dispatch(stopModalLoading());\n\t\treturn;\n\t}\n\n\tclearLocalSession();\n\n\tif (window.top) {\n\t\tawait transaction.complete();\n\t\twindow.top.location = orderResult.redirect;\n\t}\n}\n\nfunction getNoncePayload(): NoncePayload {\n\tconst payload = {} as NoncePayload;\n\tif (PeachPayCustomer.billing.email()) {\n\t\tpayload.emailAddress = PeachPayCustomer.billing.email();\n\t}\n\n\tif (PeachPayCustomer.billing.firstName()) {\n\t\tpayload.firstName = PeachPayCustomer.billing.firstName();\n\t}\n\n\tif (PeachPayCustomer.billing.lastName()) {\n\t\tpayload.lastName = PeachPayCustomer.billing.lastName();\n\t}\n\n\tif (PeachPayCustomer.billing.address1()) {\n\t\tpayload.line1 = PeachPayCustomer.billing.address1();\n\t}\n\n\tif (PeachPayCustomer.billing.postal()) {\n\t\tpayload.zipCode = PeachPayCustomer.billing.postal();\n\t}\n\n\treturn payload;\n}\n","import {type GatewayConfiguration} from '../../models/GatewayConfiguration';\nimport {getLocaleText} from '../../util/translation';\nimport cardImageURL from '../../../img/marks/credit-card-regular.svg';\nimport cardBadgeURL from '../../../img/badge/card.svg';\nimport {type PoyntGateway} from './poynt';\nimport {PoyntCardElement} from '../../../../native-checkout/ts/poynt/class-poynt-card-payment';\nimport {$qs} from '../../../../@shared/ts/dom';\nimport {type NoncePayload, type PoyntOptions} from '../../../../native-checkout/ts/poynt/types';\nimport {Feature} from '../../reducers/environmentReducer';\nimport {FeatureFlag} from '../../../../@type/features';\n\nfunction initPoyntCardMethod(): PoyntGateway {\n\tconst config: GatewayConfiguration = {\n\t\tname: Feature.metadata<string>(FeatureFlag.POYNT_CARD_GATEWAY, 'title') ?? getLocaleText('Card'),\n\t\tgatewayId: 'peachpay_poynt_card',\n\t\tdescription: '',\n\t\tassets: {\n\t\t\ttitle: {src: cardImageURL},\n\t\t\tbadge: {src: cardBadgeURL},\n\t\t},\n\t};\n\n\tlet cardElement: PoyntCardElement | null = null;\n\n\treturn {\n\t\tconfig,\n\t\tinit(options: PoyntOptions) {\n\t\t\tconst customCSS = {\n\t\t\t\tiFrame: {\n\t\t\t\t\tborder: '0px',\n\t\t\t\t\tborderRadius: '0px',\n\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\theight: '84px',\n\t\t\t\t\twidth: '-webkit-fill-available',\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Render Poynt card element\n\t\t\tconst $container = $qs('#pp-pms-new div.pp-pm-saved-option[data-gateway=\"peachpay_poynt_card\"]');\n\t\t\tif (!$container) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$container.setAttribute('id', 'pp-poynt-new');\n\t\t\t$container.style.padding = '0px';\n\t\t\t$container.style.border = '0px';\n\t\t\t$container.style.width = '-webkit-fill-available';\n\t\t\tcardElement = new PoyntCardElement(options);\n\t\t\tcardElement.mount('pp-poynt-new', customCSS);\n\t\t},\n\t\tasync tokenize(payload: NoncePayload) {\n\t\t\tif (!cardElement) {\n\t\t\t\treturn {\n\t\t\t\t\terror: 'Poynt Card element not found while attempting to tokenize card.',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst result = cardElement.tokenize(payload);\n\t\t\treturn result;\n\t\t},\n\t};\n}\n\nexport {initPoyntCardMethod};\n"],"names":["setupPoyntButton","store","gatewayId","page","loadingMode","startsWith","$element","classList","remove","add","renderPoyntButtonDisplay","mode","innerHTML","disabled","renderPoyntButtonLoading","options","this","businessId","applicationId","$cardElement","TokenizeJs","mount","selector","document","tokenize","payload","Promise","resolve","on","data","nonce","error","message","getNonce","initPoyntPaymentIntegration","orderService","poyntSrc","poyntOptions","gateways","gatewayImplementations","gatewayConfigurations","method","config","name","description","assets","title","src","badge","card","cardElement","init","$container","setAttribute","style","padding","border","width","PoyntCardElement","iFrame","borderRadius","boxShadow","height","initPoyntCardMethod","registerPoyntGateways","Object","entries","gateway","confirm","event","$target","target","closest","payment","$el","emailAddress","firstName","lastName","line1","zipCode","getNoncePayload","startTransaction","transactionError","transaction","errorMessage","complete","paymentStatus","orderStatus","note","placeOrder","peachpay_poynt_nonce","orderError","orderResult","result","c","window","top","location","redirect","poyntPaymentFlow","addEventListener","activatePoyntGateways"],"sourceRoot":""}